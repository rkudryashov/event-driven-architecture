{
  "name": "user.source",
  "config": {
    "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
    "plugin.name": "pgoutput",
    "database.hostname": "user-db",
    "database.port": "5432",
    "database.user": "${file:/secrets/postgres.properties:username}",
    "database.password": "${file:/secrets/postgres.properties:password}",
    "database.dbname": "user",
    "exactly.once.support": "required",
    "topic.prefix": "user.source",
    "topic.creation.default.replication.factor": 1,
    "topic.creation.default.partitions": 6,
    "schema.exclude.list": "public",
    "heartbeat.interval.ms": "5000",
    "tombstones.on.delete": false,
    "publication.autocreate.mode": "no_tables",
    "transforms": "addMetadataHeaders,decode,outbox",
    "transforms.addMetadataHeaders.type": "org.apache.kafka.connect.transforms.HeaderFrom$Value",
    "transforms.addMetadataHeaders.fields": "source,op,transaction",
    "transforms.addMetadataHeaders.headers": "source,op,transaction",
    "transforms.addMetadataHeaders.operation": "copy",
    "transforms.addMetadataHeaders.predicate": "isHeartbeat",
    "transforms.addMetadataHeaders.negate": true,
    "transforms.decode.type": "io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContent",
    "transforms.decode.fields.null.include": true,
    "transforms.outbox.type": "io.debezium.transforms.outbox.EventRouter",
    "transforms.outbox.table.field.event.key": "aggregateId",
    "transforms.outbox.table.expand.json.payload": true,
    "transforms.outbox.table.fields.additional.placement": "type:header,aggregateType:header:dataSchemaName",
    "transforms.outbox.route.by.field": "topic",
    "transforms.outbox.route.topic.replacement": "library.${routedByValue}",
    "predicates": "isHeartbeat",
    "predicates.isHeartbeat.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
    "predicates.isHeartbeat.pattern": "__debezium-heartbeat.*",
    "key.converter": "org.apache.kafka.connect.json.JsonConverter",
    "key.converter.schemas.enable": false,
    "value.converter": "io.debezium.converters.CloudEventsConverter",
    "value.converter.serializer.type": "avro",
    "value.converter.data.serializer.type": "avro",
    "value.converter.avro.apicurio.registry.url": "http://schema-registry:8080",
    "value.converter.avro.apicurio.registry.auto-register": true,
    "value.converter.avro.apicurio.registry.find-latest": true,
    "value.converter.avro.apicurio.registry.artifact-resolver-strategy": "io.apicurio.registry.serde.avro.strategy.RecordIdStrategy",
    "value.converter.metadata.source": "header",
    "value.converter.schema.cloudevents.name": "CloudEvents",
    "value.converter.schema.data.name.source.header.enable": true,
    "value.converter.extension.attributes.enable": false,
    "header.converter": "org.apache.kafka.connect.json.JsonConverter",
    "header.converter.schemas.enable": true
  }
}
